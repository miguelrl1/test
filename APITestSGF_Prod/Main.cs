/***************************************************************
    *  DO NOT EDIT THIS FILE!
    *         
    *  This file is automatically generated by HP Service Test.
    *  Manually changing the contents of this file may result in 
    *  loss of information.
    *          
    *  To edit the test, open the file ‘APITestSGF_Prod.st’ 
    *  in HP Service Test.
     ***************************************************************/
    
    namespace Script
    {
    using System;
    using System.Text;
    using System.Threading;
    using System.Xml;
    using System.Xml.Schema;
    using HP.ST.Fwk.ReporterFWK;
    using HP.ST.Shared.Utilities;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Fwk.RunTimeFWK.HelperClasses;
    using HP.ST.Fwk.RunTimeFWK.CompositeActivities;
    using HP.ST.Ext.BindingImpl.Setters.DataSourceSetters;
    using HP.ST.Fwk.JVMLoader;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using HP.ST.Fwk.SOAReplayAPI;
    using HP.ST.Fwk.UFTLicensing;
    
    
    
    public partial class WorkFlowScript : STWorkFlowScriptBase
    {    
    	TestUserCode _userCode = null;
    	TestEntities _flow = null;
    	static Reporter reporter;
    	int reportLevelInTree;
        HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator reportCreator;
    	
    	public BindDirection bind_dir35 = null;
        public BindDirection bind_dir36 = null;
        public BindDirection bind_dir37 = null;
        public BindDirection bind_dir38 = null;
        public BindDirection bind_dir39 = null;
        public BindDirection bind_dir40 = null;
        public BindDirection bind_dir41 = null;
        public BindDirection bind_dir42 = null;
        public BindDirection bind_dir43 = null;
        public BindDirection bind_dir44 = null;
        public BindDirection bind_dir45 = null;
        public BindDirection bind_dir46 = null;
        public BindDirection bind_dir47 = null;
        public BindDirection bind_dir48 = null;
        public BindDirection bind_dir49 = null;
        public BindDirection bind_dir50 = null;
        public BindDirection bind_dir51 = null;
        
        public IEnumerable<FeaturesGroup> LicensedFeatures
        {
        
        get
        {
        List<FeaturesGroup> features = new List<FeaturesGroup>();
        return features;
        
        }
        
        }
        
        public WorkFlowScript()
            : base(VuserClass.CommandLineArguments, new STRunTimeContext(), "test")
        {	
        	UpdateContextWithActionFolder(String.Empty);
        	
        }
        
        public WorkFlowScript(ISTRunTimeContext ctx)
            : base(VuserClass.CommandLineArguments, ctx, "test")
            
        {
        	this._context = ctx;
        	UpdateContextWithActionFolder(String.Empty);
        	UpdateTestSettings(ctx);
        }
        
        internal void InitializeComponent()
        {
        	LoadInput();
        	
        	InitReport();
        	
        	InitializeEncryptionManagerValues();
        
        	_userCode = new TestUserCode();
            _flow = _userCode;
            _flow.Context=this._context;
            
            
        
        	_flow.DataFetchActivity26 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity26");
            _flow.StartActivity1 = new HP.ST.Ext.BasicActivities.StartActivity(_context,"StartActivity1");
            _flow.Loop2 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop2Input>(_context,"Loop2",LoopType.For);
            _flow.DataExporterActivity28 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity28");
            _flow.DataExporterCloseActivity29 = new HP.ST.Ext.BasicActivities.DataExporterCloseActivity(_context,"DataExporterCloseActivity29");
            _flow.EndActivity3 = new HP.ST.Ext.BasicActivities.EndActivity(_context,"EndActivity3");
            _flow.DataDisconnectActivity27 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity27");
            _flow.Sequence25 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence25");
            _flow.RESTActivityV217 = new HP.ST.Ext.RestActivity.RESTActivityV2<RESTActivityV217Input,RESTActivityV217Output>(_context,"RESTActivityV217");
            _flow.RESTActivityV218 = new HP.ST.Ext.RestActivity.RESTActivityV2<RESTActivityV218Input,RESTActivityV218Output>(_context,"RESTActivityV218");
            _flow.RESTActivityV219 = new HP.ST.Ext.RestActivity.RESTActivityV2<RESTActivityV219Input,RESTActivityV219Output>(_context,"RESTActivityV219");
            _flow.RESTActivityV220 = new HP.ST.Ext.RestActivity.RESTActivityV2<RESTActivityV220Input,RESTActivityV220Output>(_context,"RESTActivityV220");
            _flow.RESTActivityV221 = new HP.ST.Ext.RestActivity.RESTActivityV2<RESTActivityV221Input,RESTActivityV221Output>(_context,"RESTActivityV221");
            _flow.RESTActivityV222 = new HP.ST.Ext.RestActivity.RESTActivityV2<RESTActivityV222Input,RESTActivityV222Output>(_context,"RESTActivityV222");
            _flow.RESTActivityV223 = new HP.ST.Ext.RestActivity.RESTActivityV2<RESTActivityV223Input,RESTActivityV223Output>(_context,"RESTActivityV223");
            _flow.RESTActivityV224 = new HP.ST.Ext.RestActivity.RESTActivityV2<RESTActivityV224Input,RESTActivityV224Output>(_context,"RESTActivityV224");
            _flow.DataFetchActivity26.Comment = @"";
            _flow.DataFetchActivity26.IconPath = @"";
            _flow.DataFetchActivity26.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity26.QueryClassName = @"HP.ST.Ext.CustomDataProviders.LocalDataQuery";
            XmlDocument DataFetchActivity26_QueryParameters_Document = new XmlDocument();
            DataFetchActivity26_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity26Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>4fed8f9f-d79c-49cf-97b4-3a3b53cd5107</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>Users</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>TableStructure</Name><Value>idUser,String,|password,String,</Value></QueryParameter><QueryParameter><Name>TableContents</Name><Value>l1080178@mvrht.net|Test1234$</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity26_QueryParameters_Document.LoadXml(xmlDataFetchActivity26Params);
            _flow.DataFetchActivity26.QueryParameters = DataFetchActivity26_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("Users", _flow.DataFetchActivity26);
            this.Activities.Add (_flow.DataFetchActivity26);
            _flow.StartActivity1.Comment = @"";
            _flow.StartActivity1.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.StartActivity1.Name = @"Start";
            _flow.StartActivity1.JVM = new HP.ST.Ext.BasicActivities.JVMProperties();
            _flow.StartActivity1.IsJavaUsed = false;
            _flow.StartActivity1.JVM.Classpath = @"%CLASSPATH%";
            _flow.StartActivity1.JVM.AdditionalVMParameters = @"";
            _flow.StartActivity1.JMS = new HP.ST.Ext.BasicActivities.JMSProperties();
            _flow.StartActivity1.IsJmsUsed = false;
            _flow.StartActivity1.JMS.JNDIContextFactory = @"<Select...>";
            _flow.StartActivity1.JMS.JNDIProviderUrl = @"";
            _flow.StartActivity1.JMS.JMSConnectionFactory = @"";
            _flow.StartActivity1.JMS.SecurityPrincipal = @"";
            _flow.StartActivity1.JMS.SecurityCredentials = @"";
            _flow.StartActivity1.JMS.ConnectionsPerProcess = @"1";
            _flow.StartActivity1.JMS.TimeoutOptions = @"DN_User_defined_Timeout";
            _flow.StartActivity1.JMS.UserTimeout = @"20";
            _flow.StartActivity1.JMS.GenerateAutoSelector = @"No";
            this.Activities.Add (_flow.StartActivity1);
            _flow.Loop2.ConditionAsString = @"Run for 1 iteration";
            _flow.Loop2.NumberOfIterations = (int)1;
            _flow.Loop2.Comment = @"";
            _flow.Loop2.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop2.Name = @"Test Flow";
            _flow.Loop2.Activities.Add (_flow.Sequence25);
            this.Activities.Add (_flow.Loop2);
            _flow.DataExporterActivity28.Comment = @"";
            _flow.DataExporterActivity28.IconPath = @"";
            VTDPropertyInfoBase pi69 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter35 = new VTDObjectGetter(pi69);
            VTDPropertyInfoBase pi70 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter35 = new VTDObjectSetter(pi70);
            binding_setter35 = new StringFormaterDecorator(binding_setter35,"{Step.DataFetchActivity26.OutTable}");
            bind_dir35 = new BindDirection(_flow.DataFetchActivity26,binding_getter35,binding_setter35,BindTargetType.ToInProperty);
            _flow.DataExporterActivity28.InDirections.Add(bind_dir35);
            this.Activities.Add (_flow.DataExporterActivity28);
            _flow.DataExporterCloseActivity29.Comment = @"";
            _flow.DataExporterCloseActivity29.IconPath = @"";
            this.Activities.Add (_flow.DataExporterCloseActivity29);
            _flow.EndActivity3.Comment = @"";
            _flow.EndActivity3.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.EndActivity3.Name = @"End";
            this.Activities.Add (_flow.EndActivity3);
            _flow.DataDisconnectActivity27.Comment = @"";
            _flow.DataDisconnectActivity27.IconPath = @"";
            VTDPropertyInfoBase pi71 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter36 = new VTDObjectGetter(pi71);
            VTDPropertyInfoBase pi72 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter36 = new VTDObjectSetter(pi72);
            binding_setter36 = new StringFormaterDecorator(binding_setter36,"{Step.DataFetchActivity26.OutTable}");
            bind_dir36 = new BindDirection(_flow.DataFetchActivity26,binding_getter36,binding_setter36,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity27.InDirections.Add(bind_dir36);
            this.Activities.Add (_flow.DataDisconnectActivity27);
            _flow.Sequence25.Comment = @"";
            _flow.Sequence25.IconPath = @"";
            _flow.Sequence25.Name = @"Sequence25";
            _flow.Sequence25.Activities.Add (_flow.RESTActivityV217);
            _flow.Sequence25.Activities.Add (_flow.RESTActivityV218);
            _flow.Sequence25.Activities.Add (_flow.RESTActivityV219);
            _flow.Sequence25.Activities.Add (_flow.RESTActivityV220);
            _flow.Sequence25.Activities.Add (_flow.RESTActivityV221);
            _flow.Sequence25.Activities.Add (_flow.RESTActivityV222);
            _flow.Sequence25.Activities.Add (_flow.RESTActivityV223);
            _flow.Sequence25.Activities.Add (_flow.RESTActivityV224);
            _flow.RESTActivityV217.TextBody = @"";
            _flow.RESTActivityV217.TextXmlBody = @"";
            _flow.RESTActivityV217.FileBody = @"";
            _flow.RESTActivityV217.PostBody = @"";
            _flow.RESTActivityV217.Url = @"http://192.168.100.34:14080/nt/SSO_Token/1/0/token?grant_type=password&username={Step.RESTInputProperties.RESTActivityV217.idUser}&password={Step.RESTInputProperties.RESTActivityV217.password}&Connection=close";
            _flow.RESTActivityV217.HttpMethod = @"POST";
            _flow.RESTActivityV217.HttpVersion = @"1.1";
            _flow.RESTActivityV217.RequestHeaders = new Pair<string, string>[1];
            _flow.RESTActivityV217.RequestHeaders[0] = new Pair<string, string>();
            _flow.RESTActivityV217.RequestHeaders[0].Key = @"Autorization";
            _flow.RESTActivityV217.RequestHeaders[0].Value = @"Basic Y21zOnNXVXNhRDZVc3BFc3BBaGVkZXc=";
            _flow.RESTActivityV217.Input.idUser = @"l1080178@mvrht.net";
            _flow.RESTActivityV217.Input.password = @"Test1234$";
            _flow.RESTActivityV217.Comment = @"";
            _flow.RESTActivityV217.IconPath = @"AddIns\ServiceTest\REST\ictb_REST_Method_16.png";
            _flow.RESTActivityV217.RequestBodyType = @"Text";
            _flow.RESTActivityV217.ResponseType = @"Json";
            _flow.RESTActivityV217.Name = @"Token_SGF_1st";
            _flow.RESTActivityV217.Proxy.Server = @"";
            _flow.RESTActivityV217.Proxy.Username = @"";
            _flow.RESTActivityV217.Proxy.Password = @"";
            _flow.RESTActivityV217.Authentication.Username = @"HPTest";
            _flow.RESTActivityV217.Authentication.Password = this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
            _flow.RESTActivityV217.Authentication.PreemptiveAuthentication = true;
            _flow.RESTActivityV217.ConnectionType = @"Close";
            _flow.RESTActivityV217.Timeout = (int)100000;
            _flow.RESTActivityV217.ClientCertificate.Password = @"";
            _flow.RESTActivityV217.ClientCertificate.FileSystem.Path = @"";
            _flow.RESTActivityV217.UseClientCertificate = false;
            _flow.RESTActivityV217.MaximumAutomaticRedirections = (int)3;
            _flow.RESTActivityV217.AllowRedirections = true;
            _flow.RESTActivityV217.ReuseCookies = false;
            _flow.RESTActivityV217.ExpectServerError = false;
            _flow.RESTActivityV217.HanaRequest = false;
            XmlDocument RESTActivityV217_XMLBody_Document = new XmlDocument();
            RESTActivityV217_XMLBody_Document.PreserveWhitespace = true;
            RESTActivityV217_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV217.XMLBody = RESTActivityV217_XMLBody_Document;
            XmlDocument RESTActivityV217_RequestMultipartInfoXml_Document = new XmlDocument();
            RESTActivityV217_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            RESTActivityV217_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.RESTActivityV217.RequestMultipartInfoXml = RESTActivityV217_RequestMultipartInfoXml_Document;
            _flow.RESTActivityV217.Multipart=false;
            _flow.RESTActivityV217.Input.idUser = @"l1080178@mvrht.net";
            _flow.RESTActivityV217.Input.password = @"Test1234$";
            _flow.RESTActivityV217.Input.idUser = @"l1080178@mvrht.net";
            _flow.RESTActivityV217.Input.password = @"Test1234$";
            VTDPropertyInfoBase pi73 = new VTDPropertyInfoBase("Input.idUser");
            VTDBaseGetter binding_getter37 = new VTDObjectGetter(pi73);
            VTDPropertyInfoBase pi74 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter37 = new VTDObjectSetter(pi74);
            binding_setter37 = new StringFormaterDecorator(binding_setter37,"{Step.RESTInputProperties.RESTActivityV217.idUser}");
            bind_dir37 = new BindDirection(_flow.RESTActivityV217,binding_getter37,binding_setter37,BindTargetType.ToInProperty);
            _flow.RESTActivityV217.InDirections.Add(bind_dir37);
            VTDPropertyInfoBase pi75 = new VTDPropertyInfoBase("Input.password");
            VTDBaseGetter binding_getter38 = new VTDObjectGetter(pi75);
            VTDPropertyInfoBase pi76 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter38 = new VTDObjectSetter(pi76);
            binding_setter38 = new StringFormaterDecorator(binding_setter38,"{Step.RESTInputProperties.RESTActivityV217.password}");
            bind_dir38 = new BindDirection(_flow.RESTActivityV217,binding_getter38,binding_setter38,BindTargetType.ToInProperty);
            _flow.RESTActivityV217.InDirections.Add(bind_dir38);
            XmlDocument RESTActivityV217_ExpectedResponseXmlBody_Document = new XmlDocument();
            RESTActivityV217_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            RESTActivityV217_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV217.ExpectedResponseXmlBody = RESTActivityV217_ExpectedResponseXmlBody_Document;
            XmlDocument RESTActivityV217_ExpectedResponseJsonBody_Document = new XmlDocument();
            RESTActivityV217_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            RESTActivityV217_ExpectedResponseJsonBody_Document.LoadXml(
@"<Object jsonType=""Object"" isAnonymous=""true""><access_token jsonType=""String"">stlq6h58i55prp3tj3ml0ij09kpm91vgrhofe82ill4d7lsnopk</access_token><token_type jsonType=""String"">bearer</token_type><id_token jsonType=""String"">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uX2lkIjoiNG9kcTBqNzBuZW50Y2NuNnVwMDkyM2QyMTgifQ.5-mXUxME0fUCnxoTfl3l4cRa6e_V0RGzuHRjbVB10-c</id_token><expires_in jsonType=""String"">1505935346</expires_in><refresh_token jsonType=""String"">1ck5fpsvhlnjugf1qhr2rjfphc5tamluc76ouelihqas47avqkdf</refresh_token></Object>");
            _flow.RESTActivityV217.ExpectedResponseJsonBody = RESTActivityV217_ExpectedResponseJsonBody_Document;
            XmlDocument RESTActivityV217_ExpectedOutputProperties_Document = new XmlDocument();
            RESTActivityV217_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            RESTActivityV217_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion></ResponseHttpVersion><StatusCode>200</StatusCode><StatusDescription></StatusDescription><ResponseBody></ResponseBody><ResponseBodyAsBase64></ResponseBodyAsBase64></Arguments>");
            _flow.RESTActivityV217.ExpectedOutputProperties = RESTActivityV217_ExpectedOutputProperties_Document;
            set_RESTActivityV217_checkpoints(_flow.RESTActivityV217);
            _flow.RESTActivityV218.TextBody = @"";
            _flow.RESTActivityV218.TextXmlBody = @"";
            _flow.RESTActivityV218.FileBody = @"";
            _flow.RESTActivityV218.PostBody = @"";
            _flow.RESTActivityV218.Url = @"http://192.168.100.34:14080/nt/SSO_UserInfo/1/19/userinfo";
            _flow.RESTActivityV218.HttpMethod = @"POST";
            _flow.RESTActivityV218.HttpVersion = @"1.1";
            _flow.RESTActivityV218.RequestHeaders = new Pair<string, string>[2];
            _flow.RESTActivityV218.RequestHeaders[0] = new Pair<string, string>();
            _flow.RESTActivityV218.RequestHeaders[0].Key = @"Authorization";
            _flow.RESTActivityV218.RequestHeaders[0].Value = @"bearer {Step.RESTInputProperties.RESTActivityV218.Token}";
            _flow.RESTActivityV218.RequestHeaders[1] = new Pair<string, string>();
            _flow.RESTActivityV218.RequestHeaders[1].Key = @"ClientAuthKey";
            _flow.RESTActivityV218.RequestHeaders[1].Value = @"Yz1/2hc=z0+R//H7Es=QVxKf2+t=/NVO";
            _flow.RESTActivityV218.Input.Token = @"{Step.ResponseJsonBody.RESTActivityV217.access_token}";
            _flow.RESTActivityV218.Comment = @"";
            _flow.RESTActivityV218.IconPath = @"AddIns\ServiceTest\REST\ictb_REST_Method_16.png";
            _flow.RESTActivityV218.RequestBodyType = @"Text";
            _flow.RESTActivityV218.ResponseType = @"Text";
            _flow.RESTActivityV218.Name = @"UserInfo_SGF_1st";
            _flow.RESTActivityV218.Proxy.Server = @"";
            _flow.RESTActivityV218.Proxy.Username = @"";
            _flow.RESTActivityV218.Proxy.Password = @"";
            _flow.RESTActivityV218.Authentication.Username = @"";
            _flow.RESTActivityV218.Authentication.Password = @"";
            _flow.RESTActivityV218.Authentication.PreemptiveAuthentication = false;
            _flow.RESTActivityV218.ConnectionType = @"Close";
            _flow.RESTActivityV218.Timeout = (int)100000;
            _flow.RESTActivityV218.ClientCertificate.Password = @"";
            _flow.RESTActivityV218.ClientCertificate.FileSystem.Path = @"";
            _flow.RESTActivityV218.UseClientCertificate = false;
            _flow.RESTActivityV218.MaximumAutomaticRedirections = (int)3;
            _flow.RESTActivityV218.AllowRedirections = true;
            _flow.RESTActivityV218.ReuseCookies = false;
            _flow.RESTActivityV218.ExpectServerError = false;
            _flow.RESTActivityV218.HanaRequest = false;
            XmlDocument RESTActivityV218_XMLBody_Document = new XmlDocument();
            RESTActivityV218_XMLBody_Document.PreserveWhitespace = true;
            RESTActivityV218_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV218.XMLBody = RESTActivityV218_XMLBody_Document;
            XmlDocument RESTActivityV218_RequestMultipartInfoXml_Document = new XmlDocument();
            RESTActivityV218_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            RESTActivityV218_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.RESTActivityV218.RequestMultipartInfoXml = RESTActivityV218_RequestMultipartInfoXml_Document;
            _flow.RESTActivityV218.Multipart=false;
            _flow.RESTActivityV218.Input.Token = @"{Step.ResponseJsonBody.RESTActivityV217.access_token}";
            _flow.RESTActivityV218.Input.Token = @"{Step.ResponseJsonBody.RESTActivityV217.access_token}";
            VTDPropertyInfoBase pi77 = new VTDPropertyInfoBase("XMLResponse","/*[local-name(.)='Object'][1]/*[local-name(.)='access_token'][1]");
            VTDBaseGetter binding_getter39 = new VTDJsonGetter(pi77);
            VTDPropertyInfoBase pi78 = new VTDPropertyInfoBase("Input.Token");
            VTDBaseSetter binding_setter39 = new VTDObjectSetter(pi78);
            binding_setter39 = new StringFormaterDecorator(binding_setter39,"{Step.ResponseJsonBody.RESTActivityV217.access_token}");
            bind_dir39 = new BindDirection(_flow.RESTActivityV217,binding_getter39,binding_setter39,BindTargetType.ToInProperty);
            _flow.RESTActivityV218.InDirections.Add(bind_dir39);
            VTDPropertyInfoBase pi79 = new VTDPropertyInfoBase("Input.Token");
            VTDBaseGetter binding_getter40 = new VTDObjectGetter(pi79);
            VTDPropertyInfoBase pi80 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter40 = new VTDObjectSetter(pi80);
            binding_setter40 = new StringFormaterDecorator(binding_setter40,"{Step.RESTInputProperties.RESTActivityV218.Token}");
            bind_dir40 = new BindDirection(_flow.RESTActivityV218,binding_getter40,binding_setter40,BindTargetType.ToInProperty);
            _flow.RESTActivityV218.InDirections.Add(bind_dir40);
            XmlDocument RESTActivityV218_ExpectedResponseXmlBody_Document = new XmlDocument();
            RESTActivityV218_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            RESTActivityV218_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV218.ExpectedResponseXmlBody = RESTActivityV218_ExpectedResponseXmlBody_Document;
            XmlDocument RESTActivityV218_ExpectedResponseJsonBody_Document = new XmlDocument();
            RESTActivityV218_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            RESTActivityV218_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV218.ExpectedResponseJsonBody = RESTActivityV218_ExpectedResponseJsonBody_Document;
            XmlDocument RESTActivityV218_ExpectedOutputProperties_Document = new XmlDocument();
            RESTActivityV218_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            RESTActivityV218_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion></ResponseHttpVersion><StatusCode>200</StatusCode><StatusDescription></StatusDescription><ResponseBody></ResponseBody><ResponseBodyAsBase64></ResponseBodyAsBase64></Arguments>");
            _flow.RESTActivityV218.ExpectedOutputProperties = RESTActivityV218_ExpectedOutputProperties_Document;
            set_RESTActivityV218_checkpoints(_flow.RESTActivityV218);
            _flow.RESTActivityV219.TextBody = @"";
            _flow.RESTActivityV219.TextXmlBody = @"";
            _flow.RESTActivityV219.FileBody = @"";
            _flow.RESTActivityV219.PostBody = @"";
            _flow.RESTActivityV219.Url = @"http://192.168.100.34:14080/nt/SSO_RefreshToken/1/0/token?grant_type=refresh_token&scope=openid%20profile&refresh_token={Step.RESTInputProperties.RESTActivityV219.refresh_token}&Authorization=Basic Y21zOnNXVXNhRDZVc3BFc3BBaGVkZXc=";
            _flow.RESTActivityV219.HttpMethod = @"POST";
            _flow.RESTActivityV219.HttpVersion = @"1.1";
            _flow.RESTActivityV219.Input.refresh_token = @"{Step.ResponseJsonBody.RESTActivityV217.refresh_token}";
            _flow.RESTActivityV219.Comment = @"";
            _flow.RESTActivityV219.IconPath = @"AddIns\ServiceTest\REST\ictb_REST_Method_16.png";
            _flow.RESTActivityV219.RequestBodyType = @"PostForm";
            _flow.RESTActivityV219.ResponseType = @"Json";
            _flow.RESTActivityV219.Name = @"RefreshToken_SGF_1st";
            _flow.RESTActivityV219.Proxy.Server = @"";
            _flow.RESTActivityV219.Proxy.Username = @"";
            _flow.RESTActivityV219.Proxy.Password = @"";
            _flow.RESTActivityV219.Authentication.Username = @"HPTest";
            _flow.RESTActivityV219.Authentication.Password = this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
            _flow.RESTActivityV219.Authentication.PreemptiveAuthentication = true;
            _flow.RESTActivityV219.ConnectionType = @"Close";
            _flow.RESTActivityV219.Timeout = (int)100000;
            _flow.RESTActivityV219.ClientCertificate.Password = @"";
            _flow.RESTActivityV219.ClientCertificate.FileSystem.Path = @"";
            _flow.RESTActivityV219.UseClientCertificate = false;
            _flow.RESTActivityV219.MaximumAutomaticRedirections = (int)3;
            _flow.RESTActivityV219.AllowRedirections = true;
            _flow.RESTActivityV219.ReuseCookies = false;
            _flow.RESTActivityV219.ExpectServerError = false;
            _flow.RESTActivityV219.HanaRequest = false;
            XmlDocument RESTActivityV219_XMLBody_Document = new XmlDocument();
            RESTActivityV219_XMLBody_Document.PreserveWhitespace = true;
            RESTActivityV219_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV219.XMLBody = RESTActivityV219_XMLBody_Document;
            XmlDocument RESTActivityV219_RequestMultipartInfoXml_Document = new XmlDocument();
            RESTActivityV219_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            RESTActivityV219_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.RESTActivityV219.RequestMultipartInfoXml = RESTActivityV219_RequestMultipartInfoXml_Document;
            _flow.RESTActivityV219.Multipart=false;
            _flow.RESTActivityV219.Input.refresh_token = @"{Step.ResponseJsonBody.RESTActivityV217.refresh_token}";
            _flow.RESTActivityV219.Input.refresh_token = @"{Step.ResponseJsonBody.RESTActivityV217.refresh_token}";
            VTDPropertyInfoBase pi81 = new VTDPropertyInfoBase("XMLResponse","/*[local-name(.)='Object'][1]/*[local-name(.)='refresh_token'][1]");
            VTDBaseGetter binding_getter41 = new VTDJsonGetter(pi81);
            VTDPropertyInfoBase pi82 = new VTDPropertyInfoBase("Input.refresh_token");
            VTDBaseSetter binding_setter41 = new VTDObjectSetter(pi82);
            binding_setter41 = new StringFormaterDecorator(binding_setter41,"{Step.ResponseJsonBody.RESTActivityV217.refresh_token}");
            bind_dir41 = new BindDirection(_flow.RESTActivityV217,binding_getter41,binding_setter41,BindTargetType.ToInProperty);
            _flow.RESTActivityV219.InDirections.Add(bind_dir41);
            VTDPropertyInfoBase pi83 = new VTDPropertyInfoBase("Input.refresh_token");
            VTDBaseGetter binding_getter42 = new VTDObjectGetter(pi83);
            VTDPropertyInfoBase pi84 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter42 = new VTDObjectSetter(pi84);
            binding_setter42 = new StringFormaterDecorator(binding_setter42,"{Step.RESTInputProperties.RESTActivityV219.refresh_token}");
            bind_dir42 = new BindDirection(_flow.RESTActivityV219,binding_getter42,binding_setter42,BindTargetType.ToInProperty);
            _flow.RESTActivityV219.InDirections.Add(bind_dir42);
            XmlDocument RESTActivityV219_ExpectedResponseXmlBody_Document = new XmlDocument();
            RESTActivityV219_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            RESTActivityV219_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV219.ExpectedResponseXmlBody = RESTActivityV219_ExpectedResponseXmlBody_Document;
            XmlDocument RESTActivityV219_ExpectedResponseJsonBody_Document = new XmlDocument();
            RESTActivityV219_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            RESTActivityV219_ExpectedResponseJsonBody_Document.LoadXml(
@"<Object jsonType=""Object"" isAnonymous=""true""><access_token jsonType=""String"">9d3fliti84dq88uh769j3gpherqsj832m0qi40b7mlo3a6vhe69</access_token><token_type jsonType=""String"">bearer</token_type><expires_in jsonType=""String"">1506109321</expires_in><refresh_token jsonType=""String"">10h52cj3lo775q3v5bdnn8u9e4t5e2e4e927s81ui6n7vfhpmd9v</refresh_token></Object>");
            _flow.RESTActivityV219.ExpectedResponseJsonBody = RESTActivityV219_ExpectedResponseJsonBody_Document;
            XmlDocument RESTActivityV219_ExpectedOutputProperties_Document = new XmlDocument();
            RESTActivityV219_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            RESTActivityV219_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion></ResponseHttpVersion><StatusCode>200</StatusCode><StatusDescription></StatusDescription><ResponseBody></ResponseBody><ResponseBodyAsBase64></ResponseBodyAsBase64></Arguments>");
            _flow.RESTActivityV219.ExpectedOutputProperties = RESTActivityV219_ExpectedOutputProperties_Document;
            set_RESTActivityV219_checkpoints(_flow.RESTActivityV219);
            _flow.RESTActivityV220.TextBody = @"";
            _flow.RESTActivityV220.TextXmlBody = @"";
            _flow.RESTActivityV220.FileBody = @"";
            _flow.RESTActivityV220.PostBody = @"";
            _flow.RESTActivityV220.Url = @"http://192.168.100.34:14080/nt/SSO_Logout/1/0/logout?access_token={Step.RESTInputProperties.RESTActivityV220.access_token}&post_logout_redirect_uri=www.claro360.com";
            _flow.RESTActivityV220.HttpMethod = @"GET";
            _flow.RESTActivityV220.HttpVersion = @"1.1";
            _flow.RESTActivityV220.Input.access_token = @"{Step.ResponseJsonBody.RESTActivityV219.access_token}";
            _flow.RESTActivityV220.Comment = @"";
            _flow.RESTActivityV220.IconPath = @"AddIns\ServiceTest\REST\ictb_REST_Method_16.png";
            _flow.RESTActivityV220.RequestBodyType = @"Text";
            _flow.RESTActivityV220.ResponseType = @"Text";
            _flow.RESTActivityV220.Name = @"Logout_SGF_1st";
            _flow.RESTActivityV220.Proxy.Server = @"";
            _flow.RESTActivityV220.Proxy.Username = @"";
            _flow.RESTActivityV220.Proxy.Password = @"";
            _flow.RESTActivityV220.Authentication.Username = @"HPTest";
            _flow.RESTActivityV220.Authentication.Password = this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
            _flow.RESTActivityV220.Authentication.PreemptiveAuthentication = false;
            _flow.RESTActivityV220.ConnectionType = @"Close";
            _flow.RESTActivityV220.Timeout = (int)100000;
            _flow.RESTActivityV220.ClientCertificate.Password = @"";
            _flow.RESTActivityV220.ClientCertificate.FileSystem.Path = @"";
            _flow.RESTActivityV220.UseClientCertificate = false;
            _flow.RESTActivityV220.MaximumAutomaticRedirections = (int)3;
            _flow.RESTActivityV220.AllowRedirections = true;
            _flow.RESTActivityV220.ReuseCookies = false;
            _flow.RESTActivityV220.ExpectServerError = false;
            _flow.RESTActivityV220.HanaRequest = false;
            XmlDocument RESTActivityV220_XMLBody_Document = new XmlDocument();
            RESTActivityV220_XMLBody_Document.PreserveWhitespace = true;
            RESTActivityV220_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV220.XMLBody = RESTActivityV220_XMLBody_Document;
            XmlDocument RESTActivityV220_RequestMultipartInfoXml_Document = new XmlDocument();
            RESTActivityV220_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            RESTActivityV220_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.RESTActivityV220.RequestMultipartInfoXml = RESTActivityV220_RequestMultipartInfoXml_Document;
            _flow.RESTActivityV220.Multipart=false;
            _flow.RESTActivityV220.Input.access_token = @"{Step.ResponseJsonBody.RESTActivityV219.access_token}";
            _flow.RESTActivityV220.Input.access_token = @"{Step.ResponseJsonBody.RESTActivityV219.access_token}";
            VTDPropertyInfoBase pi85 = new VTDPropertyInfoBase("XMLResponse","/*[local-name(.)='Object'][1]/*[local-name(.)='access_token'][1]");
            VTDBaseGetter binding_getter43 = new VTDJsonGetter(pi85);
            VTDPropertyInfoBase pi86 = new VTDPropertyInfoBase("Input.access_token");
            VTDBaseSetter binding_setter43 = new VTDObjectSetter(pi86);
            binding_setter43 = new StringFormaterDecorator(binding_setter43,"{Step.ResponseJsonBody.RESTActivityV219.access_token}");
            bind_dir43 = new BindDirection(_flow.RESTActivityV219,binding_getter43,binding_setter43,BindTargetType.ToInProperty);
            _flow.RESTActivityV220.InDirections.Add(bind_dir43);
            VTDPropertyInfoBase pi87 = new VTDPropertyInfoBase("Input.access_token");
            VTDBaseGetter binding_getter44 = new VTDObjectGetter(pi87);
            VTDPropertyInfoBase pi88 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter44 = new VTDObjectSetter(pi88);
            binding_setter44 = new StringFormaterDecorator(binding_setter44,"{Step.RESTInputProperties.RESTActivityV220.access_token}");
            bind_dir44 = new BindDirection(_flow.RESTActivityV220,binding_getter44,binding_setter44,BindTargetType.ToInProperty);
            _flow.RESTActivityV220.InDirections.Add(bind_dir44);
            XmlDocument RESTActivityV220_ExpectedResponseXmlBody_Document = new XmlDocument();
            RESTActivityV220_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            RESTActivityV220_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV220.ExpectedResponseXmlBody = RESTActivityV220_ExpectedResponseXmlBody_Document;
            XmlDocument RESTActivityV220_ExpectedResponseJsonBody_Document = new XmlDocument();
            RESTActivityV220_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            RESTActivityV220_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV220.ExpectedResponseJsonBody = RESTActivityV220_ExpectedResponseJsonBody_Document;
            XmlDocument RESTActivityV220_ExpectedOutputProperties_Document = new XmlDocument();
            RESTActivityV220_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            RESTActivityV220_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion></ResponseHttpVersion><StatusCode>200</StatusCode><StatusDescription></StatusDescription><ResponseBody></ResponseBody><ResponseBodyAsBase64></ResponseBodyAsBase64></Arguments>");
            _flow.RESTActivityV220.ExpectedOutputProperties = RESTActivityV220_ExpectedOutputProperties_Document;
            set_RESTActivityV220_checkpoints(_flow.RESTActivityV220);
            _flow.RESTActivityV221.TextBody = @"";
            _flow.RESTActivityV221.TextXmlBody = @"";
            _flow.RESTActivityV221.FileBody = @"";
            _flow.RESTActivityV221.PostBody = @"";
            _flow.RESTActivityV221.Url = @"http://192.168.100.35:14080/nt/SSO_Token/1/0/token?grant_type=password&username={Step.RESTInputProperties.RESTActivityV221.idUser}&password=Test1234$&Connection=close";
            _flow.RESTActivityV221.HttpMethod = @"POST";
            _flow.RESTActivityV221.HttpVersion = @"1.1";
            _flow.RESTActivityV221.RequestHeaders = new Pair<string, string>[1];
            _flow.RESTActivityV221.RequestHeaders[0] = new Pair<string, string>();
            _flow.RESTActivityV221.RequestHeaders[0].Key = @"Autorization";
            _flow.RESTActivityV221.RequestHeaders[0].Value = @"Basic Y21zOnNXVXNhRDZVc3BFc3BBaGVkZXc=";
            _flow.RESTActivityV221.Input.idUser = @"l1080178@mvrht.net";
            _flow.RESTActivityV221.Input.password = @"Test1234$";
            _flow.RESTActivityV221.Comment = @"";
            _flow.RESTActivityV221.IconPath = @"AddIns\ServiceTest\REST\ictb_REST_Method_16.png";
            _flow.RESTActivityV221.RequestBodyType = @"Text";
            _flow.RESTActivityV221.ResponseType = @"Json";
            _flow.RESTActivityV221.Name = @"Token_SGF_2nd";
            _flow.RESTActivityV221.Proxy.Server = @"";
            _flow.RESTActivityV221.Proxy.Username = @"";
            _flow.RESTActivityV221.Proxy.Password = @"";
            _flow.RESTActivityV221.Authentication.Username = @"HPTest";
            _flow.RESTActivityV221.Authentication.Password = this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
            _flow.RESTActivityV221.Authentication.PreemptiveAuthentication = true;
            _flow.RESTActivityV221.ConnectionType = @"Close";
            _flow.RESTActivityV221.Timeout = (int)100000;
            _flow.RESTActivityV221.ClientCertificate.Password = @"";
            _flow.RESTActivityV221.ClientCertificate.FileSystem.Path = @"";
            _flow.RESTActivityV221.UseClientCertificate = false;
            _flow.RESTActivityV221.MaximumAutomaticRedirections = (int)3;
            _flow.RESTActivityV221.AllowRedirections = true;
            _flow.RESTActivityV221.ReuseCookies = false;
            _flow.RESTActivityV221.ExpectServerError = false;
            _flow.RESTActivityV221.HanaRequest = false;
            XmlDocument RESTActivityV221_XMLBody_Document = new XmlDocument();
            RESTActivityV221_XMLBody_Document.PreserveWhitespace = true;
            RESTActivityV221_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV221.XMLBody = RESTActivityV221_XMLBody_Document;
            XmlDocument RESTActivityV221_RequestMultipartInfoXml_Document = new XmlDocument();
            RESTActivityV221_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            RESTActivityV221_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.RESTActivityV221.RequestMultipartInfoXml = RESTActivityV221_RequestMultipartInfoXml_Document;
            _flow.RESTActivityV221.Multipart=false;
            _flow.RESTActivityV221.Input.idUser = @"l1080178@mvrht.net";
            _flow.RESTActivityV221.Input.password = @"Test1234$";
            _flow.RESTActivityV221.Input.idUser = @"l1080178@mvrht.net";
            _flow.RESTActivityV221.Input.password = @"Test1234$";
            VTDPropertyInfoBase pi89 = new VTDPropertyInfoBase("Input.idUser");
            VTDBaseGetter binding_getter45 = new VTDObjectGetter(pi89);
            VTDPropertyInfoBase pi90 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter45 = new VTDObjectSetter(pi90);
            binding_setter45 = new StringFormaterDecorator(binding_setter45,"{Step.RESTInputProperties.RESTActivityV221.idUser}");
            bind_dir45 = new BindDirection(_flow.RESTActivityV221,binding_getter45,binding_setter45,BindTargetType.ToInProperty);
            _flow.RESTActivityV221.InDirections.Add(bind_dir45);
            XmlDocument RESTActivityV221_ExpectedResponseXmlBody_Document = new XmlDocument();
            RESTActivityV221_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            RESTActivityV221_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV221.ExpectedResponseXmlBody = RESTActivityV221_ExpectedResponseXmlBody_Document;
            XmlDocument RESTActivityV221_ExpectedResponseJsonBody_Document = new XmlDocument();
            RESTActivityV221_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            RESTActivityV221_ExpectedResponseJsonBody_Document.LoadXml(
@"<Object jsonType=""Object"" isAnonymous=""true""><access_token jsonType=""String"">5n3av5j223ul2h4kvdhktjoejke0v9l0d2ue9lt2fec6v3rad9o</access_token><token_type jsonType=""String"">bearer</token_type><id_token jsonType=""String"">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uX2lkIjoiNjY2b2VoZXEwdmNkZDNsM25oY3Q3ZWlxYTIifQ.DfWfsUdRdHwLnVNuuYIbGquGPDr_X399phRO52SyoDQ</id_token><expires_in jsonType=""String"">1497980901</expires_in><refresh_token jsonType=""String"">d72m1201m1mojol0pf682j2a6q39bgpd4p85e5smlak0uorven6</refresh_token></Object>");
            _flow.RESTActivityV221.ExpectedResponseJsonBody = RESTActivityV221_ExpectedResponseJsonBody_Document;
            XmlDocument RESTActivityV221_ExpectedOutputProperties_Document = new XmlDocument();
            RESTActivityV221_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            RESTActivityV221_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion></ResponseHttpVersion><StatusCode>200</StatusCode><StatusDescription></StatusDescription><ResponseBody></ResponseBody><ResponseBodyAsBase64></ResponseBodyAsBase64></Arguments>");
            _flow.RESTActivityV221.ExpectedOutputProperties = RESTActivityV221_ExpectedOutputProperties_Document;
            set_RESTActivityV221_checkpoints(_flow.RESTActivityV221);
            _flow.RESTActivityV222.TextBody = @"";
            _flow.RESTActivityV222.TextXmlBody = @"";
            _flow.RESTActivityV222.FileBody = @"";
            _flow.RESTActivityV222.PostBody = @"";
            _flow.RESTActivityV222.Url = @"http://192.168.100.35:14080/nt/SSO_UserInfo/1/19/userinfo";
            _flow.RESTActivityV222.HttpMethod = @"POST";
            _flow.RESTActivityV222.HttpVersion = @"1.1";
            _flow.RESTActivityV222.RequestHeaders = new Pair<string, string>[2];
            _flow.RESTActivityV222.RequestHeaders[0] = new Pair<string, string>();
            _flow.RESTActivityV222.RequestHeaders[0].Key = @"Authorization";
            _flow.RESTActivityV222.RequestHeaders[0].Value = @"bearer {Step.RESTInputProperties.RESTActivityV222.access_token}";
            _flow.RESTActivityV222.RequestHeaders[1] = new Pair<string, string>();
            _flow.RESTActivityV222.RequestHeaders[1].Key = @"ClientAuthKey";
            _flow.RESTActivityV222.RequestHeaders[1].Value = @"Yz1/2hc=z0+R//H7Es=QVxKf2+t=/NVO";
            _flow.RESTActivityV222.Input.access_token = @"{Step.ResponseJsonBody.RESTActivityV221.access_token}";
            _flow.RESTActivityV222.Comment = @"";
            _flow.RESTActivityV222.IconPath = @"AddIns\ServiceTest\REST\ictb_REST_Method_16.png";
            _flow.RESTActivityV222.RequestBodyType = @"Text";
            _flow.RESTActivityV222.ResponseType = @"Json";
            _flow.RESTActivityV222.Name = @"UserInfo_SGF_2nd";
            _flow.RESTActivityV222.Proxy.Server = @"";
            _flow.RESTActivityV222.Proxy.Username = @"";
            _flow.RESTActivityV222.Proxy.Password = @"";
            _flow.RESTActivityV222.Authentication.Username = @"HPTest";
            _flow.RESTActivityV222.Authentication.Password = this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
            _flow.RESTActivityV222.Authentication.PreemptiveAuthentication = false;
            _flow.RESTActivityV222.ConnectionType = @"Close";
            _flow.RESTActivityV222.Timeout = (int)100000;
            _flow.RESTActivityV222.ClientCertificate.Password = @"";
            _flow.RESTActivityV222.ClientCertificate.FileSystem.Path = @"";
            _flow.RESTActivityV222.UseClientCertificate = false;
            _flow.RESTActivityV222.MaximumAutomaticRedirections = (int)3;
            _flow.RESTActivityV222.AllowRedirections = true;
            _flow.RESTActivityV222.ReuseCookies = false;
            _flow.RESTActivityV222.ExpectServerError = false;
            _flow.RESTActivityV222.HanaRequest = false;
            XmlDocument RESTActivityV222_XMLBody_Document = new XmlDocument();
            RESTActivityV222_XMLBody_Document.PreserveWhitespace = true;
            RESTActivityV222_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV222.XMLBody = RESTActivityV222_XMLBody_Document;
            XmlDocument RESTActivityV222_RequestMultipartInfoXml_Document = new XmlDocument();
            RESTActivityV222_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            RESTActivityV222_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.RESTActivityV222.RequestMultipartInfoXml = RESTActivityV222_RequestMultipartInfoXml_Document;
            _flow.RESTActivityV222.Multipart=false;
            _flow.RESTActivityV222.Input.access_token = @"{Step.ResponseJsonBody.RESTActivityV221.access_token}";
            _flow.RESTActivityV222.Input.access_token = @"{Step.ResponseJsonBody.RESTActivityV221.access_token}";
            VTDPropertyInfoBase pi91 = new VTDPropertyInfoBase("XMLResponse","/*[local-name(.)='Object'][1]/*[local-name(.)='access_token'][1]");
            VTDBaseGetter binding_getter46 = new VTDJsonGetter(pi91);
            VTDPropertyInfoBase pi92 = new VTDPropertyInfoBase("Input.access_token");
            VTDBaseSetter binding_setter46 = new VTDObjectSetter(pi92);
            binding_setter46 = new StringFormaterDecorator(binding_setter46,"{Step.ResponseJsonBody.RESTActivityV221.access_token}");
            bind_dir46 = new BindDirection(_flow.RESTActivityV221,binding_getter46,binding_setter46,BindTargetType.ToInProperty);
            _flow.RESTActivityV222.InDirections.Add(bind_dir46);
            VTDPropertyInfoBase pi93 = new VTDPropertyInfoBase("Input.access_token");
            VTDBaseGetter binding_getter47 = new VTDObjectGetter(pi93);
            VTDPropertyInfoBase pi94 = new VTDPropertyInfoBase("RequestHeaders[0].Value");
            VTDBaseSetter binding_setter47 = new VTDObjectSetter(pi94);
            binding_setter47 = new StringFormaterDecorator(binding_setter47,"{Step.RESTInputProperties.RESTActivityV222.access_token}");
            bind_dir47 = new BindDirection(_flow.RESTActivityV222,binding_getter47,binding_setter47,BindTargetType.ToInProperty);
            _flow.RESTActivityV222.InDirections.Add(bind_dir47);
            XmlDocument RESTActivityV222_ExpectedResponseXmlBody_Document = new XmlDocument();
            RESTActivityV222_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            RESTActivityV222_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV222.ExpectedResponseXmlBody = RESTActivityV222_ExpectedResponseXmlBody_Document;
            XmlDocument RESTActivityV222_ExpectedResponseJsonBody_Document = new XmlDocument();
            RESTActivityV222_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            RESTActivityV222_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080></F6DA54ED-92F5-4c5c-9795-170905F25080>");
            _flow.RESTActivityV222.ExpectedResponseJsonBody = RESTActivityV222_ExpectedResponseJsonBody_Document;
            XmlDocument RESTActivityV222_ExpectedOutputProperties_Document = new XmlDocument();
            RESTActivityV222_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            RESTActivityV222_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion></ResponseHttpVersion><StatusCode>200</StatusCode><StatusDescription></StatusDescription><ResponseBody></ResponseBody><ResponseBodyAsBase64></ResponseBodyAsBase64></Arguments>");
            _flow.RESTActivityV222.ExpectedOutputProperties = RESTActivityV222_ExpectedOutputProperties_Document;
            set_RESTActivityV222_checkpoints(_flow.RESTActivityV222);
            _flow.RESTActivityV223.TextBody = @"";
            _flow.RESTActivityV223.TextXmlBody = @"";
            _flow.RESTActivityV223.FileBody = @"";
            _flow.RESTActivityV223.PostBody = @"";
            _flow.RESTActivityV223.Url = @"http://192.168.100.35:14080/nt/SSO_RefreshToken/1/0/token?grant_type=refresh_token&scope=openid%20profile&refresh_token={Step.RESTInputProperties.RESTActivityV223.refresh_token}&Authorization=Basic Y21zOnNXVXNhRDZVc3BFc3BBaGVkZXc=";
            _flow.RESTActivityV223.HttpMethod = @"POST";
            _flow.RESTActivityV223.HttpVersion = @"1.1";
            _flow.RESTActivityV223.Input.refresh_token = @"{Step.ResponseJsonBody.RESTActivityV221.refresh_token}";
            _flow.RESTActivityV223.Comment = @"";
            _flow.RESTActivityV223.IconPath = @"AddIns\ServiceTest\REST\ictb_REST_Method_16.png";
            _flow.RESTActivityV223.RequestBodyType = @"PostForm";
            _flow.RESTActivityV223.ResponseType = @"Json";
            _flow.RESTActivityV223.Name = @"RefreshToken_SGF_2nd";
            _flow.RESTActivityV223.Proxy.Server = @"";
            _flow.RESTActivityV223.Proxy.Username = @"";
            _flow.RESTActivityV223.Proxy.Password = @"";
            _flow.RESTActivityV223.Authentication.Username = @"HPTest";
            _flow.RESTActivityV223.Authentication.Password = this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
            _flow.RESTActivityV223.Authentication.PreemptiveAuthentication = true;
            _flow.RESTActivityV223.ConnectionType = @"Close";
            _flow.RESTActivityV223.Timeout = (int)100000;
            _flow.RESTActivityV223.ClientCertificate.Password = @"";
            _flow.RESTActivityV223.ClientCertificate.FileSystem.Path = @"";
            _flow.RESTActivityV223.UseClientCertificate = false;
            _flow.RESTActivityV223.MaximumAutomaticRedirections = (int)3;
            _flow.RESTActivityV223.AllowRedirections = true;
            _flow.RESTActivityV223.ReuseCookies = false;
            _flow.RESTActivityV223.ExpectServerError = false;
            _flow.RESTActivityV223.HanaRequest = false;
            XmlDocument RESTActivityV223_XMLBody_Document = new XmlDocument();
            RESTActivityV223_XMLBody_Document.PreserveWhitespace = true;
            RESTActivityV223_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV223.XMLBody = RESTActivityV223_XMLBody_Document;
            XmlDocument RESTActivityV223_RequestMultipartInfoXml_Document = new XmlDocument();
            RESTActivityV223_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            RESTActivityV223_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.RESTActivityV223.RequestMultipartInfoXml = RESTActivityV223_RequestMultipartInfoXml_Document;
            _flow.RESTActivityV223.Multipart=false;
            _flow.RESTActivityV223.Input.refresh_token = @"{Step.ResponseJsonBody.RESTActivityV221.refresh_token}";
            _flow.RESTActivityV223.Input.refresh_token = @"{Step.ResponseJsonBody.RESTActivityV221.refresh_token}";
            VTDPropertyInfoBase pi95 = new VTDPropertyInfoBase("XMLResponse","/*[local-name(.)='Object'][1]/*[local-name(.)='refresh_token'][1]");
            VTDBaseGetter binding_getter48 = new VTDJsonGetter(pi95);
            VTDPropertyInfoBase pi96 = new VTDPropertyInfoBase("Input.refresh_token");
            VTDBaseSetter binding_setter48 = new VTDObjectSetter(pi96);
            binding_setter48 = new StringFormaterDecorator(binding_setter48,"{Step.ResponseJsonBody.RESTActivityV221.refresh_token}");
            bind_dir48 = new BindDirection(_flow.RESTActivityV221,binding_getter48,binding_setter48,BindTargetType.ToInProperty);
            _flow.RESTActivityV223.InDirections.Add(bind_dir48);
            VTDPropertyInfoBase pi97 = new VTDPropertyInfoBase("Input.refresh_token");
            VTDBaseGetter binding_getter49 = new VTDObjectGetter(pi97);
            VTDPropertyInfoBase pi98 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter49 = new VTDObjectSetter(pi98);
            binding_setter49 = new StringFormaterDecorator(binding_setter49,"{Step.RESTInputProperties.RESTActivityV223.refresh_token}");
            bind_dir49 = new BindDirection(_flow.RESTActivityV223,binding_getter49,binding_setter49,BindTargetType.ToInProperty);
            _flow.RESTActivityV223.InDirections.Add(bind_dir49);
            XmlDocument RESTActivityV223_ExpectedResponseXmlBody_Document = new XmlDocument();
            RESTActivityV223_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            RESTActivityV223_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV223.ExpectedResponseXmlBody = RESTActivityV223_ExpectedResponseXmlBody_Document;
            XmlDocument RESTActivityV223_ExpectedResponseJsonBody_Document = new XmlDocument();
            RESTActivityV223_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            RESTActivityV223_ExpectedResponseJsonBody_Document.LoadXml(
@"<Object jsonType=""Object"" isAnonymous=""true""><access_token jsonType=""String"">5n3av5j223ul2h4kvdhktjoejke0v9l0d2ue9lt2fec6v3rad9o</access_token><token_type jsonType=""String"">bearer</token_type><id_token jsonType=""String"">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uX2lkIjoiNjY2b2VoZXEwdmNkZDNsM25oY3Q3ZWlxYTIifQ.DfWfsUdRdHwLnVNuuYIbGquGPDr_X399phRO52SyoDQ</id_token><expires_in jsonType=""String"">1497980901</expires_in><refresh_token jsonType=""String"">d72m1201m1mojol0pf682j2a6q39bgpd4p85e5smlak0uorven6</refresh_token></Object>");
            _flow.RESTActivityV223.ExpectedResponseJsonBody = RESTActivityV223_ExpectedResponseJsonBody_Document;
            XmlDocument RESTActivityV223_ExpectedOutputProperties_Document = new XmlDocument();
            RESTActivityV223_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            RESTActivityV223_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion></ResponseHttpVersion><StatusCode>200</StatusCode><StatusDescription></StatusDescription><ResponseBody></ResponseBody><ResponseBodyAsBase64></ResponseBodyAsBase64></Arguments>");
            _flow.RESTActivityV223.ExpectedOutputProperties = RESTActivityV223_ExpectedOutputProperties_Document;
            set_RESTActivityV223_checkpoints(_flow.RESTActivityV223);
            _flow.RESTActivityV224.TextBody = @"";
            _flow.RESTActivityV224.TextXmlBody = @"";
            _flow.RESTActivityV224.FileBody = @"";
            _flow.RESTActivityV224.PostBody = @"";
            _flow.RESTActivityV224.Url = @"http://192.168.100.35:14080/nt/SSO_Logout/1/0/logout?access_token={Step.RESTInputProperties.RESTActivityV224.access_token}&post_logout_redirect_uri=www.claro360.com";
            _flow.RESTActivityV224.HttpMethod = @"POST";
            _flow.RESTActivityV224.HttpVersion = @"1.1";
            _flow.RESTActivityV224.Input.access_token = @"{Step.ResponseJsonBody.RESTActivityV223.access_token}";
            _flow.RESTActivityV224.Comment = @"";
            _flow.RESTActivityV224.IconPath = @"AddIns\ServiceTest\REST\ictb_REST_Method_16.png";
            _flow.RESTActivityV224.RequestBodyType = @"Text";
            _flow.RESTActivityV224.ResponseType = @"Text";
            _flow.RESTActivityV224.Name = @"Logout_SGF_2nd";
            _flow.RESTActivityV224.Proxy.Server = @"";
            _flow.RESTActivityV224.Proxy.Username = @"";
            _flow.RESTActivityV224.Proxy.Password = @"";
            _flow.RESTActivityV224.Authentication.Username = @"HPTest";
            _flow.RESTActivityV224.Authentication.Password = this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
            _flow.RESTActivityV224.Authentication.PreemptiveAuthentication = true;
            _flow.RESTActivityV224.ConnectionType = @"Close";
            _flow.RESTActivityV224.Timeout = (int)100000;
            _flow.RESTActivityV224.ClientCertificate.Password = @"";
            _flow.RESTActivityV224.ClientCertificate.FileSystem.Path = @"";
            _flow.RESTActivityV224.UseClientCertificate = false;
            _flow.RESTActivityV224.MaximumAutomaticRedirections = (int)3;
            _flow.RESTActivityV224.AllowRedirections = true;
            _flow.RESTActivityV224.ReuseCookies = false;
            _flow.RESTActivityV224.ExpectServerError = false;
            _flow.RESTActivityV224.HanaRequest = false;
            XmlDocument RESTActivityV224_XMLBody_Document = new XmlDocument();
            RESTActivityV224_XMLBody_Document.PreserveWhitespace = true;
            RESTActivityV224_XMLBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV224.XMLBody = RESTActivityV224_XMLBody_Document;
            XmlDocument RESTActivityV224_RequestMultipartInfoXml_Document = new XmlDocument();
            RESTActivityV224_RequestMultipartInfoXml_Document.PreserveWhitespace = true;
            RESTActivityV224_RequestMultipartInfoXml_Document.LoadXml(
@"<RequestMultipartInfo><Type>Related</Type></RequestMultipartInfo>");
            _flow.RESTActivityV224.RequestMultipartInfoXml = RESTActivityV224_RequestMultipartInfoXml_Document;
            _flow.RESTActivityV224.Multipart=false;
            _flow.RESTActivityV224.Input.access_token = @"{Step.ResponseJsonBody.RESTActivityV223.access_token}";
            _flow.RESTActivityV224.Input.access_token = @"{Step.ResponseJsonBody.RESTActivityV223.access_token}";
            VTDPropertyInfoBase pi99 = new VTDPropertyInfoBase("XMLResponse","/*[local-name(.)='Object'][1]/*[local-name(.)='access_token'][1]");
            VTDBaseGetter binding_getter50 = new VTDJsonGetter(pi99);
            VTDPropertyInfoBase pi100 = new VTDPropertyInfoBase("Input.access_token");
            VTDBaseSetter binding_setter50 = new VTDObjectSetter(pi100);
            binding_setter50 = new StringFormaterDecorator(binding_setter50,"{Step.ResponseJsonBody.RESTActivityV223.access_token}");
            bind_dir50 = new BindDirection(_flow.RESTActivityV223,binding_getter50,binding_setter50,BindTargetType.ToInProperty);
            _flow.RESTActivityV224.InDirections.Add(bind_dir50);
            VTDPropertyInfoBase pi101 = new VTDPropertyInfoBase("Input.access_token");
            VTDBaseGetter binding_getter51 = new VTDObjectGetter(pi101);
            VTDPropertyInfoBase pi102 = new VTDPropertyInfoBase("Url");
            VTDBaseSetter binding_setter51 = new VTDObjectSetter(pi102);
            binding_setter51 = new StringFormaterDecorator(binding_setter51,"{Step.RESTInputProperties.RESTActivityV224.access_token}");
            bind_dir51 = new BindDirection(_flow.RESTActivityV224,binding_getter51,binding_setter51,BindTargetType.ToInProperty);
            _flow.RESTActivityV224.InDirections.Add(bind_dir51);
            XmlDocument RESTActivityV224_ExpectedResponseXmlBody_Document = new XmlDocument();
            RESTActivityV224_ExpectedResponseXmlBody_Document.PreserveWhitespace = true;
            RESTActivityV224_ExpectedResponseXmlBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV224.ExpectedResponseXmlBody = RESTActivityV224_ExpectedResponseXmlBody_Document;
            XmlDocument RESTActivityV224_ExpectedResponseJsonBody_Document = new XmlDocument();
            RESTActivityV224_ExpectedResponseJsonBody_Document.PreserveWhitespace = true;
            RESTActivityV224_ExpectedResponseJsonBody_Document.LoadXml(
@"<F6DA54ED-92F5-4c5c-9795-170905F25080 />");
            _flow.RESTActivityV224.ExpectedResponseJsonBody = RESTActivityV224_ExpectedResponseJsonBody_Document;
            XmlDocument RESTActivityV224_ExpectedOutputProperties_Document = new XmlDocument();
            RESTActivityV224_ExpectedOutputProperties_Document.PreserveWhitespace = true;
            RESTActivityV224_ExpectedOutputProperties_Document.LoadXml(
@"<Arguments><ResponseHttpVersion></ResponseHttpVersion><StatusCode>200</StatusCode><StatusDescription></StatusDescription><ResponseBody></ResponseBody><ResponseBodyAsBase64></ResponseBodyAsBase64></Arguments>");
            _flow.RESTActivityV224.ExpectedOutputProperties = RESTActivityV224_ExpectedOutputProperties_Document;
            set_RESTActivityV224_checkpoints(_flow.RESTActivityV224);
            
        }
        
        internal void InitializeEncryptionManagerValues()
        {
        	this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
        	this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
        	this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
        	this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
        	this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
        	this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
        	this._context.EncryptionMngr.Decrypt("kf6soQhLacZQdbeWgZYzbQ==");
        
        }
        	
    	bool useReport = true;
    
    	protected override STExecutionResult ExecuteStep()
        {
            return base.ExecuteStep();
        }
    
        public void Start()
        {
    	    try
    		{
    		  Workflow_Executing();
    		  this.ExecuteStep();
    		}
    		finally
    		{
    		  WorkFlowScript_Completed();
    		}
        }
    
    	private void InitReport()
    	{
    		if (useReport)
    		{	
    			// Intialize Reporter
    			string reportDBDir = Path.Combine(this._context.ReportDirectory, @"Report");
    			CleanupReport(reportDBDir);        	
    			string reportDBPath = Path.Combine(reportDBDir, "VTDReport.mdb");        	
    			if (reporter == null)
    			{
    				reporter = new Reporter(reportDBPath);
    			}
    			_context.Reporter = reporter;
    		}
    	}
    
        public static void CopyDirectory(string Src, string Dst)
        {
            String[] Files;
    
            if (Dst[Dst.Length - 1] != Path.DirectorySeparatorChar)
                Dst += Path.DirectorySeparatorChar;
            if (!Directory.Exists(Dst)) Directory.CreateDirectory(Dst);
            Files = Directory.GetFileSystemEntries(Src);
            foreach (string Element in Files)
            {
                // Sub directories
                if (Directory.Exists(Element))
                    CopyDirectory(Element, Dst + Path.GetFileName(Element));
                // Files in directory
                else
                    File.Copy(Element, Dst + Path.GetFileName(Element), true);
            }
        }
        
        private void CleanupReport(string reportDBDir)
        {   
    		if (useReport)
    		{             
    			string reportTemplateDir = Path.Combine(ServiceTestRunner.GetInstallPath(),@"bin\ReportResources");                
    			try
    			{
            		CopyDirectory(reportTemplateDir, reportDBDir);
    			}
    			catch //(Exception ex)
    			{
    				//ToDo: LoggingService.Warn("Report Cleanup Error", ex);
    			}
    		}
        }
    
        void Workflow_Executing()
        {   
        	InitReportNode();
                       
        }
    
    	private void InitReportNode()
    	{
    		if (useReport)
    		{	
        		// Init report creator
    			this.reportCreator = new HP.ST.Fwk.ReportCreator.QTPEngine.QTPEngineReportCreator();
    			this.reportLevelInTree = reportCreator.Init(_context.EnvironmentProfile.GetVariableValue("TestName"), _context);
                
    			STActivityBase activity = this;
    			string workflowID = activity.GetHashCode().ToString();
    			ReportNodeCreationData newNodeData =
    			new ReportNodeCreationData(workflowID, workflowID, DateTime.Now);
    			reporter.CreateReportNode(newNodeData);
            
    			ReportInfoData newReportData = new ReportInfoData(workflowID, ReportKeywords.TypeKeywordTag, this.GetType().ToString());
    			reporter.SendReportData(newReportData);
    			newReportData = new ReportInfoData(workflowID, ReportKeywords.NameKeywordTag, this.Name);
    			//TrackData(ReportInfoData.InfoDataTag, newReportData);
    			reporter.SendReportData(newReportData);            
            }
    	}
        
        void WorkFlowScript_Completed()
        {   
    		
    
    		CreateReportFiles();
    					
        	// Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
    
    		OnExecutionCompleted();
    		
        }
    
    	private void CreateReportFiles()
    	{
    		if (useReport)
    		{	
    			//Dispose reporter inorder to close connection to report DB
           		this._context.Reporter.Dispose();
            	
           		// Run report creator
    			reportCreator.RunOnDBAndCreateFiles();
    		}
    	}
    
        
        void Workflow_Faulting()
        {
    		
    
    		CreateReportFiles();
            // Write all snapshots to disk
    		this._context.SnapshotManager.WriteSnapshotsToDisk();
           
    		OnExecutionCompleted();
        }
    
    	protected override QcSystemVariables GetRuntimeQcVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeQcVariables(this._context);
    	}
            
    	protected override TestSystemVariables GetTestSystemVariables(ISTRunTimeContext context)
    	{
    		return new HP.ST.Ext.BasicActivities.RuntimeTestVariables(this._context);
    	}
    
    	private void UpdateTestSettings(ISTRunTimeContext ctx)
        {
    		ctx.PropertyBag["StopTestOnStepFailure"] = true;
    	}
    }
    
    public partial class VuserClass
    {
    	public static string[] CommandLineArguments;
    	public static string[] DotNetResolverPaths;
    	
        public VuserClass()
        {
    				
    		AssemblyResolver.AddSTPathsToResolutionPaths();
    		AssemblyResolver.AttachToAppdomain();
        }
    
        private void AddAssemblyResolver()
        {
    		AssemblyResolver.AddTestPathToResolutionPaths(GetTestPath());
    		AssemblyResolver.AddPathsForAssemblyResolution(DotNetResolverPaths);
        }
    	
        public int STAction()
        {	
            AddAssemblyResolver();
            STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
            WorkFlowScript script = new WorkFlowScript(ctx);
            script.InitializeComponent();
            script.Start();       
            
            return 0;
        }
        
        public void NotifyLicenseException(string msg)
        {
        		
    		try
    		{
    		    STRunTimeContext ctx = new STRunTimeContext(Directory.GetParent(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)).FullName, string.Empty);
                WorkFlowScript script = new WorkFlowScript(ctx);
                script.InitializeComponent();
                script.Context.ReplayClient.OnLicenseFailure(msg);
                
            }
            catch (Exception)
            {
    			// ToDo: log the error message
            }        
        }
    
    	 protected string GetTestPath()
            {
                if (CommandLineArguments != null)
                {
                    for (int i = 0; i < CommandLineArguments.Length; i++)
                    {
                        if (CommandLineArguments[i].Equals("-test", StringComparison.OrdinalIgnoreCase))
                        {
                            return CommandLineArguments[i + 1];
                        }
                    }
                }
                return String.Empty;
            }
        
    }
    
    }
    